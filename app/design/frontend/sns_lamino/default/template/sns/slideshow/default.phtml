<?php
/*------------------------------------------------------------------------
 # SNS Slideshow - Version 1.0
 * Copyright (C) 2013 The SNS Theme. All Rights Reserved.
 * @license - GNU/GPL, http://www.gnu.org/licenses/gpl.html
 * Author: SNS Theme
 * Websites: http://www.snstheme.com
-------------------------------------------------------------------------*/

$slides = explode(',', $this->slides_html);
$slidesHtml = '';
if($slides)
	for($i=0;$i<count($slides);$i++)
		$slidesHtml .= $this->getLayout()->createBlock('cms/block')->setBlockId(trim($slides[$i]))->toHtml();

if($slidesHtml) :
$uq = rand().time();
$blockId = 'sns_slideshow' . $uq;

$this->slide_width = ((int)$this->slide_width) ? (int)$this->slide_width : 1920;
$this->slide_height = ((int)$this->slide_height) ? (int)$this->slide_height : 550;

$sl_size = 'width: '.(int)$this->slide_width.'px; height: '.(int)$this->slide_height.'px;';

$slide_transitions = Sns_Slideshow_Model_System_Config_Source_Transitions::getTransitionsCode($this->slide_transitions);
$caption_transitions = Sns_Slideshow_Model_System_Config_Source_CaptionTransitions::getCaptionTransitionsCode();

?>

<div class="sns-slideshow-wraper" style="overflow: hidden;">
	<div id="<?php echo $blockId; ?>" class="sns-slideshow" style="<?php echo $sl_size; ?>">
	    <div data-u="loading">
	        <div class="bg-loading"></div>
	        <div class="icon-loading"></div>
	    </div>
	    <div data-u="slides" style="<?php echo $sl_size; ?>">
			<?php echo $slidesHtml; ?>
	    </div>
	    
	    <div data-u="navigator" class="jssorb13">
	        <div data-u="prototype"></div>
	    </div>
		<span data-u="arrowleft" class="jssora15l" style="text-align:center;line-height:60px;">
		</span>
		<span data-u="arrowright" class="jssora15r" style="text-align:center;line-height:60px;">
		</span>
	</div>
	<script>
	    jQuery(document).ready(function ($) {
	        var _SlideshowTransitions = [ <?php echo $slide_transitions; ?> ];
	        var _CaptionTransitions = [];
	        <?php echo $caption_transitions; ?>

	        var options = {
	            $FillMode: 2,                                       //[Optional] The way to fill image in slide, 0 stretch, 1 contain (keep aspect ratio and put all inside slide), 2 cover (keep aspect ratio and cover whole slide), 4 actual size, 5 contain for large image, actual size for small image, default value is 0
	            <?php echo ((int)$this->autoplay) ? '$AutoPlay: true, $AutoPlayInterval: '.(int)$this->autoplay.',' : ''; ?>
	            //$AutoPlay: true,                                    //[Optional] Whether to auto play, to enable slideshow, this option must be set to true, default value is false
	            //$AutoPlayInterval: 1000,                            //[Optional] Interval (in milliseconds) to go for next slide since the previous stopped if the slider is auto playing, default value is 3000
	            <?php echo ($this->pauseonhover) ? '$PauseOnHover: 1,' : '$PauseOnHover: 0,'; ?>
	            //$PauseOnHover: 1,                                   //[Optional] Whether to pause when mouse over if a slider is auto playing, 0 no pause, 1 pause for desktop, 2 pause for touch device, 3 pause for desktop and touch device, 4 freeze for desktop, 8 freeze for touch device, 12 freeze for desktop and touch device, default value is 1

	            $ArrowKeyNavigation: true,   			            //[Optional] Allows keyboard (arrow key) navigation or not, default value is false
	            $SlideEasing: $JssorEasing$.$EaseOutQuint,          //[Optional] Specifies easing for right to left animation, default value is $JssorEasing$.$EaseOutQuad
	            $SlideDuration: 800,                               //[Optional] Specifies default duration (swipe) for slide in milliseconds, default value is 500
	            $MinDragOffsetToSlide: 20,                          //[Optional] Minimum drag offset to trigger slide , default value is 20
	            //$SlideWidth: 600,                                 //[Optional] Width of every slide in pixels, default value is width of 'slides' container
	            //$SlideHeight: 300,                                //[Optional] Height of every slide in pixels, default value is height of 'slides' container
	            $SlideSpacing: 0, 					                //[Optional] Space between each slide in pixels, default value is 0
	            $DisplayPieces: 1,                                  //[Optional] Number of pieces to display (the slideshow would be disabled if the value is set to greater than 1), the default value is 1
	            $ParkingPosition: 0,                                //[Optional] The offset position to park slide (this options applys only when slideshow disabled), default value is 0.
	            $UISearchMode: 1,                                   //[Optional] The way (0 parellel, 1 recursive, default value is 1) to search UI components (slides container, loading screen, navigator container, arrow navigator container, thumbnail navigator container etc).
	            $PlayOrientation: 1,                                //[Optional] Orientation to play slide (for auto play, navigation), 1 horizental, 2 vertical, 5 horizental reverse, 6 vertical reverse, default value is 1
	            $DragOrientation: 1,                                //[Optional] Orientation to drag slide, 0 no drag, 1 horizental, 2 vertical, 3 either, default value is 1 (Note that the $DragOrientation should be the same as $PlayOrientation when $DisplayPieces is greater than 1, or parking position is not 0)
	                
	            $SlideshowOptions: {                                //[Optional] Options to specify and enable slideshow or not
	                $Class: $JssorSlideshowRunner$,                 //[Required] Class to create instance of slideshow
	                $Transitions: _SlideshowTransitions,            //[Required] An array of slideshow transitions to play slideshow
	                //$TransitionsOrder: 0,                           //[Optional] The way to choose transition to play slide, 1 Sequence, 0 Random
	            	<?php echo ($this->rand_transition) ? '$TransitionsOrder: 0,' : '$TransitionsOrder: 1,'; ?>
	                $ShowLink: true                                    //[Optional] Whether to bring slide link on top of the slider when slideshow is running, default value is false
	            },
	            	
	            $CaptionSliderOptions: {                            //[Optional] Options which specifies how to animate caption
	                $Class: $JssorCaptionSlider$,                   //[Required] Class to create instance to animate caption
	                $CaptionTransitions: _CaptionTransitions,       //[Required] An array of caption transitions to play caption, see caption transition section at jssor slideshow transition builder
	                $PlayInMode: 1,                                 //[Optional] 0 None (no play), 1 Chain (goes after main slide), 3 Chain Flatten (goes after main slide and flatten all caption animations), default value is 1
	                $PlayOutMode: 3                                 //[Optional] 0 None (no play), 1 Chain (goes before main slide), 3 Chain Flatten (goes before main slide and flatten all caption animations), default value is 1
	            },

	            $BulletNavigatorOptions: {                          //[Optional] Options to specify and enable navigator or not
	                $Class: $JssorBulletNavigator$,                 //[Required] Class to create navigator instance
	                $ChanceToShow: 2,                               //[Required] 0 Never, 1 Mouse Over, 2 Always
	                $AutoCenter: 1,                                 //[Optional] Auto center navigator in parent container, 0 None, 1 Horizontal, 2 Vertical, 3 Both, default value is 0
	                $Steps: 1,                                      //[Optional] Steps to go for each navigation request, default value is 1
	                $Lanes: 1,                                      //[Optional] Specify lanes to arrange items, default value is 1
	                $SpacingX: 8,                                   //[Optional] Horizontal space between each item in pixel, default value is 0
	                $SpacingY: 8,                                   //[Optional] Vertical space between each item in pixel, default value is 0
	                $Orientation: 1                                 //[Optional] The orientation of the navigator, 1 horizontal, 2 vertical, default value is 1
	            },

	            $ArrowNavigatorOptions: {                           //[Optional] Options to specify and enable arrow navigator or not
	                $Class: $JssorArrowNavigator$,                  //[Requried] Class to create arrow navigator instance
	                $ChanceToShow: 2,                               //[Required] 0 Never, 1 Mouse Over, 2 Always
	                $AutoCenter: 2,                                 //[Optional] Auto center arrows in parent container, 0 No, 1 Horizontal, 2 Vertical, 3 Both, default value is 0
	                $Steps: 1                                       //[Optional] Steps to go for each navigation request, default value is 1
	            }
	        };

	        var <?php echo $blockId; ?> = new $JssorSlider$("<?php echo $blockId; ?>", options);
	        
			$('.sns-slideshow-wraper [data-u="arrowleft"]').on('click', function(){
				<?php echo $blockId; ?>.$Prev();
			});
			$('.sns-slideshow-wraper [data-u="arrowleft"]').on('click', function(){
				<?php echo $blockId; ?>.$Next();
			}); 
	        
	        function ScaleSlider() {
	        	var cfgWidth = <?php echo (int)$this->slide_width; ?>;
	        	var cfgHeight = <?php echo (int)$this->slide_height; ?>;
	        	
	            var parentWidth = <?php echo $blockId; ?>.$Elmt.parentNode.clientWidth;
	            var slideCurrWidth = $('#<?php echo $blockId; ?>').outerWidth();
	            
	            var baseWidthMax = 1200;
	            var slideWrapRate = baseWidthMax / cfgHeight;
	            
	            var arrowleft = $('#<?php echo $blockId; ?> [data-u="arrowleft"]');
	            var arrowright = $('#<?php echo $blockId; ?> [data-u="arrowright"]');
				if(cfgWidth <= baseWidthMax) {
					arrowleft.css({'left' : 30});
					arrowright.css({'right' : 30});
					
				} else {
					arrowleft.css({'left' : ((cfgWidth - baseWidthMax) / 2) + 30});
					arrowright.css({'right' : ((cfgWidth - baseWidthMax) / 2) + 30});
				}
	            
	            $('#<?php echo $blockId; ?>').css({'left' : '50%', 'margin-left' : -(slideCurrWidth / 2)})
				if (parentWidth){

					
		            if(cfgWidth > baseWidthMax) {
			            if (parentWidth <= baseWidthMax) {
			            	<?php echo $blockId; ?>.$ScaleHeight(parentWidth / slideWrapRate);
			            } else {
			            	<?php echo $blockId; ?>.$ScaleHeight(cfgHeight);
			            }
		            } else {
			            <?php echo $blockId; ?>.$ScaleWidth(Math.min(cfgWidth, parentWidth));
		            }
	            } else {
	                window.setTimeout(ScaleSlider, 30);
				}
	        }
	        ScaleSlider();
			   if (!navigator.userAgent.match(/(iPhone|iPod|iPad|BlackBerry|IEMobile)/)) {
				$(window).on('resize', ScaleSlider);
			   }
			   $('[name="sns_cfg_general_layoutType"]').on('change', function (){
				window.setTimeout(ScaleSlider, 30);
				ScaleSlider();
			   });
			   jQuery(window).on('load resize', function(){
				ScaleSlider();
			   });
			});
			 jQuery(window).on('load', function(){
			  jQuery('#<?php echo $blockId; ?> .loading').fadeOut();
			 });
	</script>
</div>
<?php endif; ?>